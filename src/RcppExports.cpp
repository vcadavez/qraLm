// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// expandedjamesonC_get_output
Rcpp::List expandedjamesonC_get_output();
RcppExport SEXP _qraLm_expandedjamesonC_get_output() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC_get_output());
    return rcpp_result_gen;
END_RCPP
}
// expandedjamesonC_set_state
void expandedjamesonC_set_state(Rcpp::NumericVector new_state);
RcppExport SEXP _qraLm_expandedjamesonC_set_state(SEXP new_stateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type new_state(new_stateSEXP);
    expandedjamesonC_set_state(new_state);
    return R_NilValue;
END_RCPP
}
// expandedjamesonC_get_state
std::vector<double> expandedjamesonC_get_state();
RcppExport SEXP _qraLm_expandedjamesonC_get_state() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC_get_state());
    return rcpp_result_gen;
END_RCPP
}
// expandedjamesonC_reset_observer
void expandedjamesonC_reset_observer();
RcppExport SEXP _qraLm_expandedjamesonC_reset_observer() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    expandedjamesonC_reset_observer();
    return R_NilValue;
END_RCPP
}
// expandedjamesonC_adap
Rcpp::List expandedjamesonC_adap(Rcpp::NumericVector init, double duration, double step_size, double start);
RcppExport SEXP _qraLm_expandedjamesonC_adap(SEXP initSEXP, SEXP durationSEXP, SEXP step_sizeSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< double >::type duration(durationSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC_adap(init, duration, step_size, start));
    return rcpp_result_gen;
END_RCPP
}
// expandedjamesonC_at
Rcpp::List expandedjamesonC_at(Rcpp::NumericVector init, std::vector<double> times, double step_size, double start);
RcppExport SEXP _qraLm_expandedjamesonC_at(SEXP initSEXP, SEXP timesSEXP, SEXP step_sizeSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type times(timesSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC_at(init, times, step_size, start));
    return rcpp_result_gen;
END_RCPP
}
// expandedjamesonC_continue_at
Rcpp::List expandedjamesonC_continue_at(std::vector<double> times, double step_size);
RcppExport SEXP _qraLm_expandedjamesonC_continue_at(SEXP timesSEXP, SEXP step_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type times(timesSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC_continue_at(times, step_size));
    return rcpp_result_gen;
END_RCPP
}
// expandedjamesonC
Rcpp::List expandedjamesonC(Rcpp::NumericVector init, double duration, double step_size, double start);
RcppExport SEXP _qraLm_expandedjamesonC(SEXP initSEXP, SEXP durationSEXP, SEXP step_sizeSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< double >::type duration(durationSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC(init, duration, step_size, start));
    return rcpp_result_gen;
END_RCPP
}
// expandedjamesonC_no_record
std::vector<double> expandedjamesonC_no_record(Rcpp::NumericVector init, double duration, double step_size, double start);
RcppExport SEXP _qraLm_expandedjamesonC_no_record(SEXP initSEXP, SEXP durationSEXP, SEXP step_sizeSEXP, SEXP startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init(initSEXP);
    Rcpp::traits::input_parameter< double >::type duration(durationSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type start(startSEXP);
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC_no_record(init, duration, step_size, start));
    return rcpp_result_gen;
END_RCPP
}
// expandedjamesonC_set_params
void expandedjamesonC_set_params(double mumax1, double mumax2, double ymax1, double ymax2, double gamma);
RcppExport SEXP _qraLm_expandedjamesonC_set_params(SEXP mumax1SEXP, SEXP mumax2SEXP, SEXP ymax1SEXP, SEXP ymax2SEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mumax1(mumax1SEXP);
    Rcpp::traits::input_parameter< double >::type mumax2(mumax2SEXP);
    Rcpp::traits::input_parameter< double >::type ymax1(ymax1SEXP);
    Rcpp::traits::input_parameter< double >::type ymax2(ymax2SEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    expandedjamesonC_set_params(mumax1, mumax2, ymax1, ymax2, gamma);
    return R_NilValue;
END_RCPP
}
// expandedjamesonC_get_params
Rcpp::List expandedjamesonC_get_params();
RcppExport SEXP _qraLm_expandedjamesonC_get_params() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(expandedjamesonC_get_params());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_qraLm_expandedjamesonC_get_output", (DL_FUNC) &_qraLm_expandedjamesonC_get_output, 0},
    {"_qraLm_expandedjamesonC_set_state", (DL_FUNC) &_qraLm_expandedjamesonC_set_state, 1},
    {"_qraLm_expandedjamesonC_get_state", (DL_FUNC) &_qraLm_expandedjamesonC_get_state, 0},
    {"_qraLm_expandedjamesonC_reset_observer", (DL_FUNC) &_qraLm_expandedjamesonC_reset_observer, 0},
    {"_qraLm_expandedjamesonC_adap", (DL_FUNC) &_qraLm_expandedjamesonC_adap, 4},
    {"_qraLm_expandedjamesonC_at", (DL_FUNC) &_qraLm_expandedjamesonC_at, 4},
    {"_qraLm_expandedjamesonC_continue_at", (DL_FUNC) &_qraLm_expandedjamesonC_continue_at, 2},
    {"_qraLm_expandedjamesonC", (DL_FUNC) &_qraLm_expandedjamesonC, 4},
    {"_qraLm_expandedjamesonC_no_record", (DL_FUNC) &_qraLm_expandedjamesonC_no_record, 4},
    {"_qraLm_expandedjamesonC_set_params", (DL_FUNC) &_qraLm_expandedjamesonC_set_params, 5},
    {"_qraLm_expandedjamesonC_get_params", (DL_FUNC) &_qraLm_expandedjamesonC_get_params, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_qraLm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
